services:
  db:
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-net

  backend:
    build:
      context: ./backend
    restart: always
    ports:
      - "8080:8080"
      - "5005:5005"   # 디버깅용 포트
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - BASE_API_URL=${BASE_API_URL}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASS=${MAIL_PASS}
    depends_on:
      - db
    networks:
      - app-net

  frontend:
    build:
      context: ./frontend
      target: ${BUILD_TARGET:-production}
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}  # 반드시 있어야 함
        REACT_APP_MINIO_API_URL: ${REACT_APP_MINIO_API_URL} 
        REACT_APP_FRONT_URL : ${REACT_APP_FRONT_URL} 
        REACT_APP_BACK_URL : ${REACT_APP_BACK_URL} 
        REACT_APP_KAKAO_REST_API : ${REACT_APP_KAKAO_REST_API} 
        REACT_APP_GOOGLE_REST_API : ${REACT_APP_GOOGLE_REST_API} 
        REACT_APP_GOOGLE_CLIENT_SECRET : ${REACT_APP_GOOGLE_CLIENT_SECRET} 
    restart: always
    ports:
      - "80:80"
    volumes:
    - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_MINIO_API_URL=${REACT_APP_MINIO_API_URL}
      - REACT_APP_FRONT_URL=${REACT_APP_FRONT_URL}
      - REACT_APP_BACK_URL=${REACT_APP_BACK_URL}
      - REACT_APP_KAKAO_REST_API=${REACT_APP_KAKAO_REST_API}
      - REACT_APP_GOOGLE_REST_API=${REACT_APP_GOOGLE_REST_API}
      - REACT_APP_GOOGLE_CLIENT_SECRET=${REACT_APP_GOOGLE_CLIENT_SECRET}

    depends_on:
      - backend
    networks:
      - app-net

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "19000:9000"   # 호스트포트:컨테이너포트
      - "19001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: 1234qwer!
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - app-net

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c '
      echo "🕓 MinIO 준비 대기 중..." &&
      until mc alias set local http://minio:9000 admin 1234qwer! 2>/dev/null; do
        sleep 2;
      done &&
      echo "✅ MinIO 연결됨." &&
      mc mb --ignore-existing local/mywebbucket &&
      mc anonymous set download local/mywebbucket &&
      echo "🎉 mywebbucket 생성 및 익명 접근 권한 설정 완료"
      '
    networks:
      - app-net

volumes:
  dbdata:
  minio-data:

networks:
  app-net:
    driver: bridge
